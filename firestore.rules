rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin or superadmin
    function isAnyAdmin() {
      // Check if a user document exists and has the role 'admin' or 'superadmin'.
      return request.auth != null 
             && exists(/databases/$(database)/documents/users/$(request.auth.uid))
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Blog collection rules
    match /blog/{postId} {
      // Public users can read posts that are marked as published.
      // Admins can read any post, regardless of its published status.
      allow read: if resource.data.isPublished == true || isAnyAdmin();

      // Only admins can create, update, or delete blog posts.
      allow write: if isAnyAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      // A user can read or update their own document. Admins can manage any user.
      allow read, update: if request.auth.uid == userId || isAnyAdmin();
      // Anyone can create a user document during registration.
      allow create: if request.auth.uid == userId;
      // Only superadmins can delete users (for safety).
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Dormitories and Halls are public to view
    match /dormitories/{dormId} {
      allow read: if true;
      allow write: if isAnyAdmin();
    }
    match /halls/{hallId} {
      allow read: if true;
      allow write: if isAnyAdmin();
    }

    // Bookings collection
    match /bookings/{bookingId} {
      // Any authenticated user can create a booking.
      allow create: if request.auth != null;
      // Admins and the user who owns the booking can read/update it. Keyholders can also read.
      allow read, update: if isAnyAdmin() 
                           || (request.auth != null && request.auth.uid == resource.data.userId)
                           || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'keyholder');
      // Only admins can delete bookings.
      allow delete: if isAnyAdmin();
    }

    // Site configuration can be read by anyone, but only written by admins.
    match /site_configuration/{docId} {
      allow read: if true;
      allow write: if isAnyAdmin();
    }
    
    // Notifications can be read by admins, but not created by clients.
    match /notifications/{notificationId} {
      allow read, update, delete: if isAnyAdmin();
      allow create: if false; 
    }
  }
}
