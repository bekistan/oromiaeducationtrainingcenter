
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    function isAdmin() {
      return request.auth != null && (request.auth.token.role == 'admin' || isSuperAdmin());
    }

    function isKeyholder() {
        return request.auth != null && request.auth.token.role == 'keyholder';
    }
    
    function isStoreManager() {
        return request.auth != null && request.auth.token.role == 'store_manager';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isCompanyRep() {
        return request.auth != null && request.auth.token.role == 'company_representative';
    }

    //--- Default Deny ---//
    match /{document=**} {
      allow read, write: if false;
    }

    //--- Publicly Readable Collections ---//
    match /blog/{postId} { allow read: if true; }
    match /halls/{hallId} { allow read: if true; }
    match /dormitories/{dormId} { allow read: if true; }
    match /site_configuration/{docId} { allow read: if true; }
    
    //--- User Profiles ---//
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if isOwner(userId);
      allow create, delete: if isSuperAdmin();
    }
    
    //--- Bookings ---//
    match /bookings/{bookingId} {
      allow create: if request.auth != null; // ALL users must be authenticated to create any booking
      allow read: if isAdmin() || isKeyholder() || (isOwner(request.resource.data.userId));
      allow update, delete: if isAdmin();
      allow update: if isKeyholder() && (request.resource.data.keyStatus != resource.data.keyStatus);
    }
    
    //--- Notifications ---//
    match /notifications/{notificationId} {
      allow read, update: if isAdmin() || isKeyholder() || isStoreManager() || (isCompanyRep() && request.auth.uid == resource.data.recipientId);
      allow create: if true; // Allows server-side actions to create notifications
    }
    
    //--- Store Management ---//
    match /store_items/{itemId} {
        allow read, write: if isStoreManager() || isAdmin();
    }
    match /store_transactions/{transactionId} {
        allow read: if isStoreManager() || isAdmin();
        allow create: if isStoreManager();
    }
    match /employees/{employeeId} {
        allow read, write: if isStoreManager() || isAdmin();
    }
    
  }
}
