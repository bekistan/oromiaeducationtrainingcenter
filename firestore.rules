rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // HELPER FUNCTIONS
    function isAnyAdmin() {
      // Check if the user is authenticated, their user document exists, and their role is admin or superadmin.
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }
    
    function isKeyholder() {
       // Check if the user is a keyholder.
       return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'keyholder';
    }

    function isOwner(userId) {
      // Check if the requesting user is the owner of the document.
      return request.auth != null && request.auth.uid == userId;
    }

    // COLLECTION RULES
    
    // Site configuration can be read by anyone, but only written by admins.
    match /site_configuration/{docId} {
      allow read: if true;
      allow write: if isAnyAdmin();
    }

    // Dormitories and Halls can be read by anyone, but only written by admins.
    match /dormitories/{dormId} {
      allow read: if true;
      allow write: if isAnyAdmin();
    }

    match /halls/{hallId} {
      allow read: if true;
      allow write: if isAnyAdmin();
    }

    // Blog posts can be read by the public if published.
    // Admins can read any post (published or draft).
    // Only admins can create, update, or delete posts.
    match /blog/{postId} {
      allow read: if resource.data.isPublished == true || isAnyAdmin();
      allow write: if isAnyAdmin();
    }

    // Booking rules:
    // - Authenticated users can create bookings.
    // - The user who made the booking, any admin, or a keyholder can read/update it.
    // - Only the owner or an admin can delete it.
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read, update: if (resource.data.userId != null && isOwner(resource.data.userId)) || isAnyAdmin() || isKeyholder();
      allow delete: if (resource.data.userId != null && isOwner(resource.data.userId)) || isAnyAdmin();
    }

    // User collection rules:
    // - Anyone can create a user document (for public registration).
    // - A user can read or update their own document.
    // - An admin can read or update any user document.
    // - Only a superadmin can delete a user document.
    match /users/{userId} {
      allow create: if true;
      allow read, update: if isOwner(userId) || isAnyAdmin();
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
    
    // Notifications can be read by admins.
    // They are created by secure server-side functions, so client-side creation is disallowed.
    match /notifications/{notificationId} {
      allow read: if isAnyAdmin();
      allow write: if false; 
    }
  }
}
